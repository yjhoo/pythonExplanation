# 곳감(모래시계)
# 현수는 곳감을 만들기 위해 감을 깍아 마당에 말리고 있습니다. 현수의 마당은 N*N 격자판으 로 이루어져 있으며, 현수는 각 격자단위로 말리는 감의 수를 정합니다. 그런데 해의 위치에 따라 특정위치의 감은 잘 마르지 않습니다. 그래서 현수는 격자의 행을 기준으로 왼쪽, 또는 오른쪽으로 회전시켜 위치를 변경해 모든 감이 잘 마르게 합니다. 만약 회전명령 정보가 2 0 3이면 2번째 행을 왼쪽으로 3만큼 아래 그림처럼 회전시키는 명령 입니다.
# 1행 10 13 10 12 15          10 13 10 12 15
# 2행 12 39 30 23 11          23 11 12 39 30
# 3행 11 25 50 53 15    ->    11 25 50 53 15
# 4행 19 27 29 37 27          19 27 29 37 27
# 5행 19 13 30 13 19          19 13 30 13 19
#
# 첫 번째 수는 행번호, 두 번째 수는 방향인데 0이면 왼쪽, 1이면 오른쪽이고, 세 번째 수는 회 전하는 격자의 수입니다. M개의 회전명령을 실행하고 난 후 아래와 같이 마당의 모래시계 모양의 영역에는 감 이 총 몇 개가 있는지 출력하는 프로그램을 작성하세요.
# 10 13 10 12 15
# 23 11 12 39 30
# 11 25 50 53 15
# 19 27 29 37 27
# 19 13 30 13 19
# ▣ 입력설명 첫 줄에 자연수 N(3<=N<=20) 이 주어며, N은 홀수입니다. 두 번째 줄부터 N줄에 걸쳐 각 줄에 N개의 자연수가 주어진다. 이 자연수는 각 격자안에 있는 감의 개수이며, 각 격자안의 감의 개수는 100을 넘지 않는다. 그 다음 줄에 회전명령의 개수인 M(1<=M<=10)이 주어지고, 그 다음 줄부터 M개의 회전명령 정보가 M줄에 걸쳐 주어집니다.
# ▣ 출력설명 총 감의 개수를 출력합니다.
# ▣ 입력예제 1                                   5 10 13 10 12 15 12 39 30 23 11 11 25 50 53 15 19 27 29 37 27 19 13 30 13 19 3 2 0 3 5 1 2 3 1 4
# ▣ 출력예제 1 362

import sys
import math
#sys.stdin=open("in3.txt", "rt")

N = int(input())
arr = [[int(x) for x in input().split()]for y in range(N)]
M = int(input())
tmp = [0] * N
c = 0
m = 0
for i in range(0, M):
    tmp = [0] * N
    # arr1[0] - 회전하는 행 정보 / arr1[1] - 0이면 왼쪽, 1이면 오른쪽 / arr1[2] - 회전하는 횟수
    arr1 = list(map(int, input().split()))
    # 회전횟수가 N을 초과할 수 있으므로 N으로 나눈 나머지 값으로 넣어준다.
    arr1[2] %= N
    # 회전되는 행의 정보를 tmp에 넣어준다.
    for j in range(0, N):
        tmp[j] = arr[arr1[0]-1][j]
    # 왼쪽일 경우와 오른쪽일 경우 회전을 반대로 하게 한다. / 회전 정도를 맞추기 힘들어 결과값을 보고 비교하면서 코드 작성함
    if arr1[1] == 0:
        for j in range(0, N):
            if j + arr1[2] >= N:
                arr[arr1[0]-1][j] = tmp[j + arr1[2] - N]
            else:
                arr[arr1[0]-1][j] = tmp[j + arr1[2]]
    else:
        for j in range(0, N):
            if j + arr1[2] >= N:
                arr[arr1[0]-1][j + arr1[2] - N] = tmp[j]
            else:
                arr[arr1[0]-1][j + arr1[2]] = tmp[j]
c = math.ceil(N / 2)
d = 0
# 만들어진 결과에 모래시계 방향의 값을 m에 입력한다. / 다이아몬드랑 반대라고 생각하면 됨
for i in range(0, N):
    for j in range(0 + d, N - d):
        m += arr[i][j]
    if i < c - 1:
        d += 1
    else:
        d -= 1
print(m)
