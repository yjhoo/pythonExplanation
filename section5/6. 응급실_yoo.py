# 응급실
# 메디컬 병원 응급실에는 의사가 한 명밖에 없습니다. 응급실은 환자가 도착한 순서대로 진료를 합니다. 하지만 위험도가 높은 환자는 빨리 응급조 치를 의사가 해야 합니다. 이런 문제를 보완하기 위해 응급실은 다음과 같은 방법으로 환자의 진료순서를 정합니다. • 환자가 접수한 순서대로의 목록에서 제일 앞에 있는 환자목록을 꺼냅니다. • 나머지 대기 목록에서 꺼낸 환자 보다 위험도가 높은 환자가 존재하면 대기목록 제일 뒤로    다시 넣습니다. 그렇지 않으면 진료를 받습니다.
# 현재 N명의 환자가 대기목록에 있습니다. N명의 대기목록 순서의 환자 위험도가 주어지면, 대기목록상의 M번째 환자는 몇 번째로 진료 를 받는지 출력하는 프로그램을 작성하세요. 대기목록상의 M번째는 대기목록의 제일 처음 환자를 0번째로 간주하여 표현한 것입니다.
# ▣ 입력설명 첫 줄에 자연수 N(5<=N<=100)과 M(0<=M<N) 주어집니다. 두 번째 줄에 접수한 순서대로 환자의 위험도(50<=위험도<=100)가 주어집니다. 위험도는 값이 높을 수록 더 위험하다는 뜻입니다. 같은 값의 위험도가 존재할 수 있습니다.
# ▣ 출력설명 M번째 환자의 몇 번째로 진료받는지 출력하세요.
# ▣ 입력예제 1                                   5 2 60 50 70 80 90
# ▣ 출력예제 1 3
# ▣ 입력예제 2                                   6 0 60 60 90 60 60 60
# ▣ 출력예제 2 5

import sys
import math
from collections import deque

#sys.stdin = open("in1.txt", "rt")

N, K = map(int, input().split())
l = list(map(int, input().split()))
# LIST를 담는 DQ
dq = deque(l)
m = 0
cnt = 0
while True:
    # 최신 MAX 값을 LOOP 돌때마다 저장
    m = max(l)
    # 가장 앞쪽에 있는 값 TMP에 넣어줌
    tmp = dq.popleft()
    # 최대값과 같은지 확인 후 같으면 제거하고 CNT +1 및 LIST 에서도 제거
    # LIST에서 제거되는 것은 순서 상관없이 존재여부만 중요하기 때문에 REMOVE사용
    # K값이 0일 경우 TMP가 K값이므로 BREAK
    # 최대값이 아니면 다시 DQ에 추가
    if m == tmp:
        cnt += 1
        l.remove(tmp)
        if K == 0:
            break
    else:
        dq.append(tmp)
    # K값이 최대값이 아니면 다시 맨뒤로 가야 하므로 LEN(L)값으로 초기화
    if K == 0:
        K = len(l)
    # 한번씩 수행할때마다 앞으로 가므로 K -1 수행
    K -= 1
print(cnt)
