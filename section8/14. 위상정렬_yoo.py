# 위상정렬(그래프 정렬)
# 위상정렬은 어떤 일을 하는 순서를 찾는 알고리즘입니다. 각각의 일의 선후관계가 복잡하게 얽혀있을 때 각각 일의 선후관계를 유지하면서 전체 일의 순서를 짜는 알고리즘입니다. 만약 아래와 같은 일의 순서를 각각 지키면서 전체 일의 순서를 정한다면 1 4 //1번일을 하고 난 후 4번일을 해야한다. 5 4 4 3 2 5 2 3 6 2
# 1
# 5
# 6
# 4
# 2
# 3
# 전체 일의 순서는 1, 6, 2, 5, 4, 3과 같이 정할 수 있다. 전체 일의 순서는 여러 가지가 있습 니다 그 중에 하나입니다.
# ▣ 입력설명 첫 번째 줄에 전체 일의 개수 N과 일의 순서 정보의 개수 M이 주어집니다. 두 번째 줄부터 M개의 정보가 주어집니다.
# ▣ 출력설명 전체 일의 순서를 출력합니다.
# ▣ 입력예제 1                                   6 6 1 4 5 4 4 3 2 5 2 3 6 2
# ▣ 출력예제 1 1 6 2 5 4 3

import sys
from collections import deque

sys.stdin = open('input.txt', 'r')

def f_check(n):
    # 수행된 작업인지 확인
    if d[n] == 0:
        for j in range(N):
            # 선수행 작업이 있을 경우 해당 작업 먼저 처리
            if l[n][j] == 1:
                f_check(j)
        # 선수행 작업 종료 후에 작업 수행하고 c에 추가
        d[n] = 1
        c.append(n+1)

N, M = map(int, input().split())
l = [[0] * N for _ in range(N)]
c = []
d = [0] * N
q = deque()
# 먼저 처리해야할 작업이 있으면 그 번호에 1을 넣어준다.
for _ in range(M):
    a, b = map(int, input().split())
    l[b-1][a-1] = 1
for i in range(N):
    f_check(i)
print(c)


