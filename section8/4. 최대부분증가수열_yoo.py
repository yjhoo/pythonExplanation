# 최대 부분 증가수열
# N개의 자연수로 이루어진 수열이 주어졌을 때, 그 중에서 가장 길게 증가하는(작은 수에서 큰 수로) 원소들의 집합을 찾는 프로그램을 작성하라. 예를 들어, 원소가 2, 7, 5, 8, 6, 4, 7, 12, 3 이면 가장 길게 증가하도록 원소들을 차례대로 뽑아내면 2, 5, 6, 7, 12를 뽑아내어 길 이가 5인 최대 부분 증가수열을 만들 수 있다.
# ▣ 입력설명 첫째 줄은 입력되는 데이터의 수 N(2≤N≤1,000, 자연수)를 의미하고, 둘째 줄은 N개의 입력데이터들이 주어진다.
# ▣ 출력설명 첫 번째 줄에 부분증가수열의 최대 길이를 출력한다.
# ▣ 입력예제 1                                   8 5 3 7 8 6 2 9 4
# ▣ 출력예제 1 4

import sys

#sys.stdin = open('in4.txt', 'r')

N = int(input())
l = list(map(int, input().split()))
# 해당 위치에서 가장 많은 높은 증가수열을 보유하고 있는 값
dy = [0] * N
dy[0] = 1
cnt = 0
for i in range(1, N):
    m = 0
    # 이전 값의 증가 수열 중 가장 큰 값을 m값으로 선택 후 m에 자신의 값을 추가하여 +1함
    for j in range(i-1, 0, -1):
        if l[j] < l[i] and m < dy[j]:
            m = dy[j]
    dy[i] = m + 1
    # 해당 값이 cnt보다 클경우 교체
    if cnt < dy[i]:
        cnt = dy[i]
print(cnt)
